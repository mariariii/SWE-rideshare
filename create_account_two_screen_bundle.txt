
// File: create_account_two_screen.dart
import 'package:flutter/material.dart';
import '../../core/app_export.dart';
import '../../core/utils/validation_functions.dart';
import '../../theme/custom_button_style.dart';
import '../../widgets/custom_elevated_button.dart';
import '../../widgets/custom_icon_button.dart';
import '../../widgets/custom_text_form_field.dart';
import 'bloc/create_account_two_bloc.dart';
import 'models/create_account_two_model.dart';

class CreateAccountTwoScreen extends StatelessWidget {
  CreateAccountTwoScreen({Key? key}) : super(key: key);

  GlobalKey<FormState> _formKey = GlobalKey<FormState>();

  static Widget builder(BuildContext context) {
    return BlocProvider<CreateAccountTwoBloc>(
      create: (context) => CreateAccountTwoBloc(
        CreateAccountTwoState(
          createAccountTwoModelObj: CreateAccountTwoModel(),
        ),
      )..add(CreateAccountTwoInitialEvent()),
      child: CreateAccountTwoScreen(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: appTheme.whiteA700,
      body: SafeArea(
        child: Form(
          key: _formKey,
          child: SizedBox(
            width: double.maxFinite,
            child: SingleChildScrollView(
              child: Container(
                width: double.maxFinite,
                padding: EdgeInsets.all(22.h),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    SizedBox(height: 40.h),
                    Align(
                      alignment: Alignment.centerLeft,
                      child: Text(
                        "lbl_profile".tr,
                        style: theme.textTheme.headlineSmall,
                      ),
                    ),
                    SizedBox(height: 10.h),
                    SizedBox(
                      height: 130.h,
                      width: 128.h,
                      child: Stack(
                        alignment: Alignment.bottomRight,
                        children: [
                          CustomImageView(
                            imagePath: ImageConstant.imgUser31,
                            height: 120.h,
                            width: 122.h,
                            radius: BorderRadius.circular(60.h),
                            alignment: Alignment.topCenter,
                          ),
                          CustomIconButton(
                            height: 46.h,
                            width: 46.h,
                            padding: EdgeInsets.all(10.h),
                            decoration: IconButtonStyleHelper.none,
                            child: CustomImageView(
                              imagePath: ImageConstant.imgLineDesignEditLine,
                            ),
                          ),
                        ],
                      ),
                    ),
                    SizedBox(height: 8.h),
                    Text(
                      "msg_name_shahd_shrivastav".tr,
                      maxLines: 2,
                      overflow: TextOverflow.ellipsis,
                      style: CustomTextStyles.titleSmallPoppins15.copyWith(
                        height: 1.68,
                      ),
                    ),
                    SizedBox(height: 28.h),
                    Padding(
                      padding: EdgeInsets.only(left: 6.h),
                      child: BlocSelector<CreateAccountTwoBloc, CreateAccountTwoState, TextEditingController?>(
                        selector: (state) => state.userNameController,
                        builder: (context, userNameController) {
                          return CustomTextFormField(
                            controller: userNameController,
                            hintText: "lbl_username".tr,
                            contentPadding: EdgeInsets.fromLTRB(18.h, 12.h, 18.h, 14.h),
                            validator: (value) {
                              if (!isText(value)) {
                                return "err_msg_please_enter_valid_text".tr;
                              }
                              return null;
                            },
                          );
                        },
                      ),
                    ),
                    SizedBox(height: 80.h),
                    Padding(
                      padding: EdgeInsets.symmetric(horizontal: 2.h),
                      child: BlocSelector<CreateAccountTwoBloc, CreateAccountTwoState, TextEditingController?>(
                        selector: (state) => state.classstandingController,
                        builder: (context, classstandingController) {
                          return CustomTextFormField(
                            controller: classstandingController,
                            hintText: "lbl_class_standing".tr,
                            textInputAction: TextInputAction.done,
                            contentPadding: EdgeInsets.fromLTRB(18.h, 12.h, 18.h, 14.h),
                          );
                        },
                      ),
                    ),
                    SizedBox(height: 238.h),
                    CustomElevatedButton(
                      height: 50.h,
                      text: "lbl_save".tr,
                      margin: EdgeInsets.only(left: 10.h, right: 18.h),
                      buttonStyle: CustomButtonStyles.fillPrimaryTL24,
                      onPressed: () {
                        onTapSave(context);
                      },
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }

  onTapSave(BuildContext context) {
    NavigatorService.pushNamed(AppRoutes.accountOneScreen);
  }
}

// File: create_account_two_bloc.dart
import 'package:flutter/material.dart';
import 'package:equatable/equatable.dart';
import '../../../core/app_export.dart';
import '../models/create_account_two_model.dart';
part 'create_account_two_event.dart';
part 'create_account_two_state.dart';

class CreateAccountTwoBloc extends Bloc<CreateAccountTwoEvent, CreateAccountTwoState> {
  CreateAccountTwoBloc(CreateAccountTwoState initialState) : super(initialState) {
    on<CreateAccountTwoInitialEvent>(_onInitialize);
  }

  _onInitialize(CreateAccountTwoInitialEvent event, Emitter<CreateAccountTwoState> emit) async {
    emit(state.copyWith(
      userNameController: TextEditingController(),
      classstandingController: TextEditingController()
    ),
   );
  }
}

// File: create_account_two_event.dart
part of 'create_account_two_bloc.dart';

class CreateAccountTwoEvent extends Equatable {
  @override
  List<Object?> get props => [];
}

class CreateAccountTwoInitialEvent extends CreateAccountTwoEvent {
  @override
  List<Object?> get props => [];
}

// File: create_account_two_state.dart
class CreateAccountTwoState extends Equatable {
  CreateAccountTwoState({
    this.userNameController,
    this.classstandingController,
    this.createAccountTwoModelObj,
  });

  TextEditingController? userNameController;
  TextEditingController? classstandingController;
  CreateAccountTwoModel? createAccountTwoModelObj;

  @override
  List<Object?> get props => [
    userNameController,
    classstandingController,
    createAccountTwoModelObj,
  ];

  CreateAccountTwoState copyWith({
    TextEditingController? userNameController,
    TextEditingController? classstandingController,
    CreateAccountTwoModel? createAccountTwoModelObj,
  }) {
    return CreateAccountTwoState(
      userNameController: userNameController ?? this.userNameController,
      classstandingController: classstandingController ?? this.classstandingController,
      createAccountTwoModelObj: createAccountTwoModelObj ?? this.createAccountTwoModelObj,
    );
  }
}

// File: create_account_two_model.dart
import 'package:equatable/equatable.dart';
import '../../../core/app_export.dart';

class CreateAccountTwoModel extends Equatable {
  CreateAccountTwoModel();

  CreateAccountTwoModel copyWith() {
    return CreateAccountTwoModel();
  }

  @override
  List<Object?> get props => [];
}
